---
title: "Projet VID"
author:
  - Charbonnier Lucas & Ançay Rémi
format:
  revealjs:
    multiplex: true
    slide-number: c/t
    incremental: true
    title-slide-attributes:
      data-background-image: img/Background.jpg
      data-background-size: cover
    footer: "Projet VID - Charbonnier Lucas & Ançay Rémi"
    transition: slide
    background-transition: fade
editor: visual
---

```{r setup}
#| output: false

download = FALSE

r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)

if(download) {
  install.packages("ggResidpanel")
  install.packages("tidyverse")
  install.packages("ggrepel")
  install.packages("GGally")
  install.packages("rgl")
  install.packages("scatterplot3d")
  install.packages("readxl")
  install.packages("psych") 
  install.packages("leaps")
  install.packages("pROC")
}

library("ggResidpanel")
library("tidyverse")
library("ggrepel")
library("GGally")
library("rgl")
library("scatterplot3d")
library("readxl")
library("psych")
library("leaps")
library("pROC")

# Chargement des données
GermanCredit <- read.csv("data/GermanCredit.csv", sep = ";")
GermanCredit = na.omit(GermanCredit)

# Séparation des variables catégorielles
GermanCredit$CHK_ACCT = factor(GermanCredit$CHK_ACCT)
GermanCredit$HISTORY = factor(GermanCredit$HISTORY)
GermanCredit$SAV_ACCT = factor(GermanCredit$SAV_ACCT)
GermanCredit$EMPLOYMENT = factor(GermanCredit$EMPLOYMENT)
GermanCredit$PRESENT_RESIDENT = factor(GermanCredit$PRESENT_RESIDENT)
GermanCredit$JOB = factor(GermanCredit$JOB)

# GLM avec toutes nos variables
GermanCredit.glm = glm(RESPONSE~., data=GermanCredit, family = binomial)

# GLM avec les variables représentatives
GermanCredit.glmReduced = glm(RESPONSE~CHK_ACCT+DURATION+HISTORY+NEW_CAR+EDUCATION+AMOUNT+SAV_ACCT+INSTALL_RATE+MALE_SINGLE+GUARANTOR+PRESENT_RESIDENT+OTHER_INSTALL+TELEPHONE+FOREIGN, data=GermanCredit, family = binomial)
```


## Information sur les données

::: columns
::: {.column width="100%"}

-   Le dataset `GermanCredit` est composé de `r nrow(GermanCredit)` lignes.

-   Dont `r sum(GermanCredit$RESPONSE == 1)` crédits accordés (contre `r sum(GermanCredit$RESPONSE == 0)`)

-   Il contient plusieurs types de données
    -   `Categorical` comme `CHK_ACCT`
    -   `Binary` comme `USED_CAR`
    -   `Numerical` comme `AGE`
   
:::
:::


## Problèmes avec les données

::: columns
::: {.column width="100%"}

Après une brève analyse exploratoire des données, nous avons remarqué quelques soucis.

- Valeurs `NA` aléatoires
- Dans `DURATION` il existait une valeur de -6 (mise à 6)
- Dans `MALE_SINGLE` il existait une valeur de 2 (mise à 1)
- Dans `GUARANTOR` il existait une valeur de -1 (mise à 1)
- Dans `AGE` il existe une valeur à 151 (mise à 51)
- `PRESENT_RESIDENT` de [1 à 4] au lieu de [0 à 3]

:::
:::

::: notes
Lucas Charbonnier, Rémi Ançay
:::

## Notre aproche

::: columns
::: {.column width="100%"}

-   Utilisation d'une Regression Linéaire

-   Puis d'une Régression Logistique

-   Utilisation des variables avec un niveau de signification de 5%


:::
:::

## Les variables représentatives

```{r}
# Extract coefficients and confidence intervals
coef_df <- as.data.frame(summary(GermanCredit.glmReduced)$coefficients)
coef_df$variable <- rownames(coef_df)
colnames(coef_df) <- c("Estimate", "Std.Error", "z.value", "p.value", "variable")

# Create the plot
ggplot(coef_df, aes(x = reorder(variable, Estimate), y = Estimate)) +
  geom_point() +
  geom_errorbar(aes(ymin = Estimate - 1.96 * Std.Error, ymax = Estimate + 1.96 * Std.Error), width = 0.2) +
  coord_flip() +  
  labs(title = "Coefficient Plot", x = "Variables", y = "Estimates")
```


## Vérification du modèle

::: columns
::: {.column width="100%"}

TODO

:::
:::

##  {background-image="img/charts.avif"}

### Résultats intéressants  {.r-fit-text}

## CHK_ACCT

::: columns
::: {.column width="70%"}

```{r}
# Create a stacked bar plot of the proportion of RESPONSE for each CHK_ACCT level
ggplot(GermanCredit.glm, aes(x = as.factor(CHK_ACCT), fill = as.factor(RESPONSE))) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent_format()) +
  labs(title = "Proportion of RESPONSE by CHK_ACCT Levels",
       x = "CHK_ACCT",
       y = "Proportion",
       fill = "RESPONSE")
```

:::

::: {.column width="30%"}

0 : < 0 DM

1 : 0 < x < 200 DM

2 : ≥ 200 DM

3 : no checking account


:::
:::

## Duration

::: columns
::: {.column width="100%"}

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(RESPONSE), y = DURATION)) +
  geom_boxplot() +
  labs(title = "Boxplot of DURATION by RESPONSE",
       x = "RESPONSE",
       y = "DURATION")
```

:::
:::

## Amount

::: columns
::: {.column width="100%"}

```{r}
# Boxplot for AMOUNT
ggplot(GermanCredit.glm, aes(x = as.factor(RESPONSE), y = AMOUNT)) +
  geom_boxplot() +
  labs(title = "Boxplot of AMOUNT by RESPONSE",
       x = "RESPONSE",
       y = "AMOUNT")
```

:::
:::

## Age

::: columns
::: {.column width="100%"}

```{r}
# Boxplot for AGE
ggplot(GermanCredit.glm, aes(x = as.factor(RESPONSE), y = AGE)) +
  geom_boxplot() +
  labs(title = "Boxplot of AGE by RESPONSE",
       x = "RESPONSE",
       y = "AGE")
```

:::
:::


## Merci !

-   Merci de nous avoir écouté

-   Avez vous des questions ?