---
title: "VID"
subtitle: "German Credit Data"
author:
  - name: Rémi Ançay & Lucas Charbonnier
highlight-style: github
format:
  html:
    theme: cosmo
    monobackgroundcolor: rgb(255,250,240)
    toc: true
    toc-location: left
    #reference-location: margin
    reference-location: document
    code-line-numbers: true
date: 'last-modified'
date-format: '[This version:] MMMM D, YYYY'
number-sections: false
editor: 
  visual
execute:
  echo: true
  message: true
  warning: false
  output: true
---

## Introduction

Ce projet consiste en la recherche et l'analyse des meilleures variables explicatives d'un dataset concernant le risque associé à des crédits bancaires. Le but est donc de trouver les meilleurs indicateurs permettant d'estimer le risque associé à un crédit.
Il s'agit d'un exercice, nos résultats ne sortiront pas du cadre de ce travail et ne seront pas appliqués à un cadre réel.

### Gestion des bibliothèques

Nous avons commencé par établir la liste des bibliothèques nécessaire à l'exécution de notre code.

```{r}
#| output: false

download = FALSE

#r = getOption("repos")
#r["CRAN"] = "http://cran.us.r-project.org"
#options(repos = r)

libraries = list(
  "ggResidpanel",
  "tidyverse",
  "ggrepel",
  "GGally",
  "rgl",
  "scatterplot3d",
  "readxl",
  "psych",
  "leaps",
  "pROC"
)

for (lib in libraries) {
  if(download)
    install.packages(lib)
  library(lib, character.only = TRUE)
}

```

## Chargement des données
```{r}
# Chargement des données
GermanCredit <- read.csv("data/GermanCredit.csv", sep = ";")
```

Après une brève analyse exploratoire des données, nous avons remarqué qu'il existait des valeurs "NA" dans le fichier. Ces valeurs semblent survenir de manière aléatoire, nous avons donc choisi de les supprimer.

```{r}
GermanCredit = na.omit(GermanCredit)
```

Il existe aussi plusieurs erreurs dans les données :

- Dans `DURATION` il existait une valeur de -6 (mise à 6)
- Dans `MALE_SINGLE` il existait une valeur de 2 (mise à 1)
- Dans `GUARANTOR` il existait une valeur de -1 (mise à 1)
- Dans `AGE` il existe une valeur à 151 (mise à 51)
- Selon la documentation du dataset, `PRESENT_RESIDENT` est une variable catégorielle censé prendre des valeurs entre 0 et 3 (compris) mais dans les faits, ces valeurs vont de 1 à 4. Nous avons décidé de ne pas rectifier cette "erreur" car en pratique ça ne fait aucune différence pour l'entraînement du modèle.

Nous avons effectué ces modifications manuellement dans le fichier CSV.

### Résumé
```{r}
describe(GermanCredit)
```

## Regression linéaire
Nous avons d'abord créé un modèle linéaire de régression utilisant toutes nos variables explicatives afin d'avoir une première idée de l'importance de celles-ci. Voici le résumé donné par le modèle.

```{r}
# LM utilisant toutes les variables explicative
GermanCredit.lm = lm(RESPONSE~., data=GermanCredit)
#coef(GermanCredit.lm)
summary(GermanCredit.lm)
```

Nous avons décidé d'utiliser les critère d'information `BIC`, `Cp` ainsi que le coefficient de détermination ajusté ${R_{adj}}^2$. Ci-dessous, les graphes des ensemble de variables explicatives retenus par la fonction `regsubsets`:

```{r}
# Trouver les meilleurs variables
choix <- regsubsets(RESPONSE~., data=GermanCredit, nbest=1, nvmax=11)

plot(choix, scale="adjr2", col="midnightblue")
plot(choix, scale="bic", col="midnightblue")
plot(choix, scale="Cp", col="midnightblue")
```

On peut constater que la plupart des colonnes ne sont jamais prises en compte et également que les 3 colonnes `CHK_ACCT`, `DURATION` et `HISTORY` sont souvent retenues, peu importe le critère d'information utilisé.

Nous avons ensuite créé un nouveau modèle utilisant seulement ces 3 meilleurs variables explicatives :

```{r}
#LM avec les 3 meilleurs variables
GermanCredit.lmReduced = lm(RESPONSE~CHK_ACCT+DURATION+HISTORY, data=GermanCredit)
summary(GermanCredit.lmReduced)
```

Malheureusement, avec un coefficient de détermination $R^2$ de `0.1805`, les résultats sont moins bon qu'avec le modèle précédent ($R^2 = 0.2712$).

Nous avons également essayé de prendre plus de variables (parmis celles qui ont été retenues dans les graphiques ci-dessus) :

```{r}
GermanCredit.lmReduced2 = lm(RESPONSE~CHK_ACCT+DURATION+HISTORY+NEW_CAR+EDUCATION+SAV_ACCT+INSTALL_RATE+MALE_SINGLE+GUARANTOR+OTHER_INSTALL, data=GermanCredit)
summary(GermanCredit.lmReduced2)
```

Avec un coefficient de détermination de `0.2396`, ce nouveau modèle se rapproche du modèle initial qui comportait toutes les variables explicatives.

On peut donc en conclure que la mauvaise performance de notre modèle n'est pas dû à la forte présence de bruit mais que c'est plutôt le modèle en question qui n'est pas adapté.

Nous avons donc décidé de changer de modèle et d'utiliser une regression logistique.

## Regression logistique

Après quelques recherches, nous avons appris que la regression logistique est particulièrement adaptées lorsque la variable de réponse est catégorielle, ce qui est notre cas.

Création du modèle de regression logistique avec toutes les variables disponibles :
```{r}
# GLM avec toutes nos variables
GermanCredit.glm = glm(RESPONSE~., data=GermanCredit, family = binomial)
summary(GermanCredit.glm)
```

Après analyse du résumé ci-dessus, nous avons reconstruit un modèle, mais cette fois avec toutes les variables qui ont un code de signification inférieur à 5%.

```{r}
# GLM avec les meilleures variables 
GermanCredit.glmReduced = glm(RESPONSE~CHK_ACCT+DURATION+HISTORY+NEW_CAR+AMOUNT+SAV_ACCT+INSTALL_RATE+MALE_SINGLE+GUARANTOR+OTHER_INSTALL+FOREIGN, data=GermanCredit, family = binomial)

AIC(GermanCredit.glmReduced)
```

On peut utiliser le critère AIC pour comparer ces deux modèles. Le second avec un ensemble de variables réduit obtient un AIC de `962.1353` contre un AIC de `975.37` pour le premier. Le second est donc meilleur.

## Vérification du modèle

Maintenant la régression logistique effectuée, nous allons tracer quelques graphes qui nous permettront de vérifier si le modèle est adéquat et qu'il est bien ajusté.

### Résidus de la régression
On commence par l'histogramme des résidus :
```{r}
residuals <- residuals(GermanCredit.glmReduced, type="deviance")

ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Histogramme des résidus", x = "Résidus de déviance", y = "Fréquence") +
  theme_minimal()
```

Dans l'idéal, on devrait obtenir une distribution normale, unimodale, symétrique et centrée autour de zéro. 

Malheureusement, notre modèle ne passe pas vraiment le test. Notre distribution est bimodale, pas symétrique et pas centrée sur zéro.

Il peut y avoir plusieurs raisons possibles à cela :

- Il existe des dépendances entre certaines de nos variables non-détectées par le modèle. Étant donné qu'il s'agit de données bancaires, cela est très probable
- Un grand nombre de valeurs atypiques pourrait aussi empêcher un bon ajustement du modèle.
- Une hétéroscédasticité, soit une variance inégale des résidus.

### Coefficients et intervalles de confiance
```{r}
# Extract coefficients and confidence intervals
coef_df <- as.data.frame(summary(GermanCredit.glmReduced)$coefficients)
coef_df$variable <- rownames(coef_df)
colnames(coef_df) <- c("Estimate", "Std.Error", "z.value", "p.value", "variable")

# Create the plot
ggplot(coef_df, aes(x = reorder(variable, Estimate), y = Estimate)) +
  geom_point() +
  geom_errorbar(aes(ymin = Estimate - 1.96 * Std.Error, ymax = Estimate + 1.96 * Std.Error), width = 0.2) +
  coord_flip() +
  labs(title = "Coefficient Plot", x = "Variables", y = "Estimates") +
  theme_minimal()
```

Dans le meilleur des cas, on ne devrait avoir que des variables dont la variance ne comprend pas zéro. Notre modèle est en accord avec cela.
Il y a juste `AMOUNT` qui est très proche de zéro, ce qui semble indiquer que le montant du crédit n'est pas un si bon indicateur de son risque, c'est un résultat intéressant. `DURATION` est similaire.

Pourtant, si on retire ces deux variables de la régression logistique, on obtient un AIC plus grand, ce qui indique un modèle moins performant.

### Courbe ROC (Receiver Operating Characteristic)
```{r}
# Predict probabilities
prob <- predict(GermanCredit.glmReduced, type = "response")

# Create ROC curve
roc_curve <- roc(GermanCredit$RESPONSE, prob)

# Plot ROC curve
ggroc(roc_curve) +
  labs(title = "ROC Curve glm", x = "False Positive Rate", y = "True Positive Rate") +
  theme_minimal()
```

Un mauvais modèle aurait une courbe ROC linéaire (aléatoire). Dans notre cas, elle tend vers le coin en haut à gauche du graphe, ce qui est bon signe.

## Analyse des résultats

Dans cette section, nous avons systématiquement représenté graphiquement toutes les variables explicatives en fonction de la variable de réponse. Nous analysons ces graphiques afin d'amener des informations concernant la prédiction du risque d'un crédit bancaire.

### Boxplots des variables explicatives numériques : Montant et durée du crédit

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(RESPONSE), y=AMOUNT)) +
geom_boxplot() + 
scale_x_discrete(labels = c("0"="Non", "1"="Oui")) +
labs(title = "Boxplot du montant du credit",x = "Crédit accordé",y ="Montant (Deutsche Marks)") +
theme_minimal()
```

Sans surprise, les crédits d'un montant élevé sont moins souvents acceptés que les crédits d'un montant plus bas. Cependant, la médiane est quasiment identiques donc il ne s'agit pas non plus du meilleur indicateur.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(RESPONSE), y=DURATION)) +
geom_boxplot() +
scale_x_discrete(labels = c("0"="Non", "1"="Oui")) + 
labs(title = "Boxplot de la durée du crédit",x = "Crédit accordé",y = "Durée (Mois)") +
theme_minimal()
```

Pour ce graphe-ci, nous avons deux hypothèses :
1. La durée d'un crédit est corrélée à son montant, ce qui explique qu'on obtienne un résultat similaire au graphique précédent.
2. Plus la durée est longue, plus il est possible que le demandeur de crédit change de situation financière et se trouve dans une "mauvaise période". En d'autres termes, on ne peut pas prédire l'avenir.

#### Vérification de l'hypothèse de corrélation
```{r}
correlation = cor(GermanCredit$DURATION, GermanCredit$AMOUNT)

# Création d'un nuage de points avec ggplot
ggplot(GermanCredit, aes(x = DURATION, y = AMOUNT)) +
  geom_point() +
  labs(title = paste("Corrélation entre DURATION et AMOUNT:", round(correlation, 2)),
       x = "Durée du crédit", y = "Montant du crédit")
```

Avec un coefficient de corrélation de `0.63`, on peut dire que `DURATION` et `AMOUNT` sont légèrement corrélées mais en regardant le graphique on peut voir qu'il y a de nombreuses exceptions et surtout une grande variance.

### Proportions des crédits accordés ou refusés, en fonction des variables explicatives catégorielles

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(CHK_ACCT), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_x_discrete(labels = c("0"="Non", "1"="Oui")) +
scale_y_continuous(labels =scales::percent_format()) +
scale_x_discrete(labels = c(
"0" = "< 0", "1" = "Entre 0 et 200", "2" = "> 200", "3"="Pas de compte courant"
)) +
labs(title = "Proportion des crédits accordés en fonction de CHK_ACCT",x = "Compte courant (Deutsche Marks)",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

`CHK_ACCT` est un des meilleurs predicteurs du risque d'un crédit. C'est un résultat intéressant car cette variable correspond au montant présent dans le compte courant du demandeur de crédit, une valeur qui est susceptible de changer au cours du mois donc pas forcément stable. Pourtant, on voit bien une tendance.

Nous n'arrivons pas à expliquer en quoi le fait de ne pas avoir de compte courant (diagramme de droite) mène à un crédit accordé. En quoi l'absence d'un compte courant réduit le risque du crédit ?

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(HISTORY), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c(
"0" = "Pas d'historique", "1" = "\nTous les crédits payés", "2" = "\n\nTous les crédits payés, sauf ceux en cours", "3"="\n\n\nHistorique de délais des paiements", "4"="\n\n\n\nCompte critique"
)) +
labs(title = "Proportion des crédits accordés en fonction de HISTORY",x = "Historique des crédits",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Les résultats obtenus ici sont très étonnants. On constate que les personnes ayant un historique de retard sur le paiement des crédits voient souvent leurs nouveaux crédits acceptés. Pareil pour les "critical account", mais pour ce deuxième cas, il y a peut-être une subtilité au niveau du terme "compte critique" que nous ne connaissons pas.

Un résultat tellement étonnant que nous avons du vérifier si nous n'avions pas inversé l'accord du crédit dans l'affichage du graphique.

Notre hypothèse, est que les banques donnent effectivement des crédits à ces personnes car cela a de grandes chances de mener à une autre demande de crédit (si la personne n'arrive pas à rembourser dans les temps). En revanche, c'est un peu controversé et difficile à vérifier.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(NEW_CAR), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c(
"0" = "Non", "1"="Oui"
)) +
labs(title = "Proportion des crédits accordés en fonction de NEW_CAR",x = "Le crédit est-il pour l'achat d'une nouvelle voiture ?",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Il semble que les personnes demandant un crédit pour l'achat d'une nouvelle voiture présentent risque légèrement plus élevé que si ce n'est pas le cas.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(SAV_ACCT), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c(
"0" = "< 100", "1"="Entre 100 et 500", "2"="500-1000", "3"=">1000","4"="Inconnu/Pas de compte"
)) +
labs(title = "Proportion des crédits accordés en fonction de SAV_ACCT",x = "Montant moyen sur le compte épargne (Deutsche Marks)",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Assez logiquement, plus les personnes disposent de réserve dans leur compte épargne, moins il est risqué de leur accorder un crédit. Il y a toutefois cette classe "pas de compte épargne" qui est difficile à interpréter et nous n'avons pas plus d'informations dessus.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(INSTALL_RATE), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Proportion des crédits accordés en fonction de INSTALL_RATE",x = "Taux d'installation (%)\n(proportion du crédit à payer périodiquement)",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Selon les spécifications, c'est censé être une colonne numérique indiquant un pourcentage, mais en pratique il n'y a que 4 valeurs : 1,2,3,4.

De plus, nous ne sommes pas sûr de l'interprétation de la variable `INSTALL_RATE` mais selon nos recherches ("installment rate" sur Google), il devrait s'agir d'un débit d'argent exprimé en pourcentage du revenu.
Cependant, nous ne voyons pas le rapport que cela a avec le crédit.

Notre hypothèse est qu'il s'agit de la quantité d'argent que la personne devra fournir chaque mois pour payer le crédit et, le cas échéant, cela explique en quoi un taux d'installation élevé mène à un crédit plus risqué car la personne devra sortir plus d'argent par mois.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(OTHER_INSTALL), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c("0" = "Non", "1"="Oui")) +
labs(title = "Proportion des crédits accordés en fonction de OTHER_INSTALL",x = "Le bénéficiaire a-t-il un autre crédit ?",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Si la personne a déjà un autre crédit à rembourser, il est logique que l'allocation du crédit soit plus risquée.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(MALE_SINGLE), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c("0" = "Non", "1"="Oui")) +
labs(title = "Proportion des crédits accordés en fonction de MALE_SINGLE",x = "Le bénéficiaire est-il un homme célibataire ?",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

La variable `MALE_SINGLE` est intéressante. D'une part car elle est étonnamment spécifique (les hommes célibataire) et d'autre part car il semble qu'il soit légèrement moins risqué d'allouer un crédit à un homme célibataire. Cela s'explique par le fait qu'un homme célibataire n'a pas de famille et donc pas de coûts associés.

Il est étonnant que la variable équivalente n'existe pas pour les femmes (`FEMALE_SINGLE` ?). Il y a peut-être moins de femmes qui demandent des crédits ?

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(GUARANTOR), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c("0" = "Non", "1"="Oui")) +
labs(title = "Proportion des crédits accordés en fonction de GUARANTOR",x = "Le bénéficiaire a-t-il un garant ?", y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Un garant est une personne qui s'engage à rembourser le crédit si le demandeur ne peut pas le faire lui. Ici, on peut voir que les crédits où il y a un garant ont légèrement plus de chances d'être acceptés.

```{r}
ggplot(GermanCredit.glm, aes(x = as.factor(FOREIGN), fill = as.factor(RESPONSE))) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_discrete(labels = c("0" = "Non", "1"="Oui")) +
labs(title = "Proportion des crédits accordés en fonction de FOREIGN",x = "Le bénéficiaire est-il un travailleur étranger ?",y = "Proportion",fill = "RESPONSE") +
scale_fill_discrete(name = "Crédit accordé ?", labels = c("Non", "Oui")) +
theme_minimal()
```

Les crédits sont apparemment plus souvent accordés aux travailleurs étrangers. 

## Conclusion

Nous ne nous attendions pas à trouver des données manquantes car la donnée (point 'f') indiquait spécifiquement qu'il n'y aurait pas d'attributs manquants.

Nous ne nous attendions pas aux résultats que nous avons obtenus. Par exemple, nous pensions que des variables explicatives telles que `AGE` ou `EMPLOYMENT` seraient importantes dans la prédiction du risque mais notre modèle logistique ne les a pas retenues.
De plus, l'analyse des graphiques s'est montrée surprenante à plusieurs reprises.

Nous avons retenu les variables explicatives suivantes : CHK_ACCT, DURATION, HISTORY, NEW_CAR, AMOUNT, SAV_ACCT, INSTALL_RATE, MALE_SINGLE, GUARANTOR, OTHER_INSTALL,FOREIGN. Principalement car c'est celles que notre modèle a jugé comme significatives.

Cependant, nous n'affirmons pas qu'il s'agit forcément des meilleures variables pour prédire le risque d'un crédit. Il serait intéressant de refaire ce projet avec un autre type de modèle (un réseau de neurones, par exemple).

